plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'com.auth0:java-jwt:4.5.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.8'

    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    // Q클래스 생성을 위한 Annotation Processor (jakarta 버전)
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    // Jakarta Persistence API (Q클래스 생성에 필요)
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    // Jakarta Annotation API (Q클래스 생성에 필요)
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    runtimeOnly 'com.mysql:mysql-connector-j'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'com.h2database:h2'

    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.security:spring-security-messaging'

    // logging, monitoring
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'


    // mariadb driver
    implementation 'org.mariadb.jdbc:mariadb-java-client'


}

tasks.named('test') {
    useJUnitPlatform()
}
